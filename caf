#!/usr/bin/env python3
import sys
from pathlib import Path
import signal


def unpack(caf, path: ('--path', Path)):
    """
    Unpack caflib from the caf executable.

    Usage:
        caf unpack [--path PATH]

    Options:
        --path PATH        Path to which unpack caflib [default: .]
    """
    from hashlib import md5
    import shutil
    from base64 import b64decode
    import tarfile
    import io
    with open(__file__) as f:
        lines = f.readlines()
    if '# ==>' not in lines[-3]:
        raise RuntimeError('No packed caflib')
    if not path:
        path = Path('.caf-{}'.format(md5(lines[-2].encode()).hexdigest()))
    caflibpath = path/'caflib'
    if caflibpath.is_dir():
        shutil.rmtree(str(caflibpath))
    archive = b64decode(lines[-2][2:])
    with io.BytesIO(archive) as f:
        tar = tarfile.open(mode='r|gz', fileobj=f)
        tar.extractall(str(path))
    return path


if __name__ == '__main__':
    if not Path('caflib').is_dir():
        libpath = unpack(None, None)
        sys.path.insert(0, str(libpath))
    from caflib.Caf import Caf
    Caf.command()(unpack)
    caf = Caf()
    signal.signal(signal.SIGINT, caf.finalize)
    caf(sys.argv)
