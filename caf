#!/usr/bin/env python3
import sys
from pathlib import Path
import signal
import os


def unpack(caf, path: ('--path', Path)):
    """
    Unpack caflib from the caf executable.

    Usage:
        caf unpack [--path PATH]

    Options:
        --path PATH        Path to which symlink caflib [default: .]
    """
    from base64 import b64decode
    import tarfile
    import io
    with open(__file__) as f:
        for line in f:
            if line == '# ==>\n':
                break
        else:
            raise RuntimeError('No packed caflib')
        version = next(f)[:-1].split(maxsplit=2)[-1]
        caflibpath = Path('.caf-{}'.format(version))
        if not caflibpath.is_dir():
            archive = b64decode(next(f)[:-1].split(maxsplit=2)[-1])
            with io.BytesIO(archive) as ftar:
                tar = tarfile.open(mode='r|gz', fileobj=ftar)
                tar.extractall(str(caflibpath))
    link = path/'caflib'
    target = caflibpath/'caflib'
    linktarget = os.path.relpath(str(target), str(link.parent))
    if link.is_symlink():
        if os.readlink(str(link)) == linktarget:
            return
        else:
            link.unlink()
    if not link.parent.is_dir():
        link.parent.mkdir()
    link.symlink_to(linktarget)


if __name__ == '__main__':
    if Path('caflib').is_dir():
        pass
    else:
        unpack(None, Path('.caf'))
        sys.path.insert(0, '.caf')
    from caflib.Caf import Caf
    Caf.command()(unpack)
    caf = Caf()
    signal.signal(signal.SIGINT, caf.finalize)
    caf(sys.argv)
